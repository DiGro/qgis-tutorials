# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Ujaval Gandhi
# This file is distributed under the same license as the QGIS Tutorials and Tips package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Matthias Wachholz <matthias.wachholz@lageso.berlin.de>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Tutorials and Tips v1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-09-05 10:57+0000\n"
"PO-Revision-Date: 2019-09-05 10:59+0000\n"
"Last-Translator: Matthias Wachholz <matthias.wachholz@lageso.berlin.de>, 2019\n"
"Language-Team: German (https://www.transifex.com/spatialthoughts/teams/7952/de/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: de\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../source/docs/3/basic_network_analysis.rst:2
msgid "Basic Network Visualization and Routing (QGIS3)"
msgstr "Einfache Netzwerkvisualisierung und Routing (QGIS3)"

#: ../../source/docs/3/basic_network_analysis.rst:4
msgid ""
"Creating, visualizing, and managing networks is an important part of GIS. "
"Many types of physical infrastructure such as roads, railways, utilities can"
" be modeled as networks with lines and nodes - with properties attached to "
"them. In this tutorial, we will learn how road networks are commonly modeled"
" and apply some styling techniques to visualize the routing properties. We "
"will also use QGIS3's built-in tools for network analysis that to find "
"shortest path between 2 points along the network."
msgstr ""
"Die Erstellung, Visualisierung und das Managen von Netzwerken ist ein "
"wichtiger Teil eines GIS. Viele Typen der in der Realität vorhandenen "
"Infrastruktur wie z.B. Straßen, Eisenbahnlinien und Versorgungsleitungen "
"können als Netzwerk aus Linien und Knoten mit jeweils zugewiesenen "
"Eigenschaften modelliert werden. In diesem Tutorial lernen wir, wie "
"Straßennetzwerke in der Regel modelliert werden. Wir werden einige "
"Gestaltungstechniken anwenden, um die Eigenschaften des Routings zu "
"visualisieren. Wir werden außerdem die in QGIS enthaltenen Hilfsmittel zur "
"Netzwerkanalyse nutzen, um die kürzeste Verbindung zwischen 2 Punkten im "
"Netzwerk zu finden."

#: ../../source/docs/3/basic_network_analysis.rst:7
msgid "Overview of the task"
msgstr "Überblick über die Aufgabe"

#: ../../source/docs/3/basic_network_analysis.rst:9
msgid ""
"We will take a layer of road centerlines for Washington DC, visualize the "
"connectivity and build a network to find shortest path between any 2 points "
"in the city."
msgstr ""
"Wie werden einen Layer mit den Mittellinien der Straßen Washington DC's "
"verwenden, die Verbindungen visualisieren und ein Netzwerk erstellen. Mit "
"Hilfe des Netzwerkes können wir den kürzesten Weg zwischen 2 beliebigen "
"Punkten in der Stadt ermitteln."

#: ../../source/docs/3/basic_network_analysis.rst:12
msgid "Other skills you will learn"
msgstr "Weitere Fähigkeiten, die wir erlernen"

#: ../../source/docs/3/basic_network_analysis.rst:13
msgid ""
"How to use data defined overrides to align an arrow symbol based on line "
"direction."
msgstr ""
"Wie man vom Dateninhalt abhängige Vorgaben für die Symbolisierung der "
"Linienrichtung mit einem Pfeil vorgibt."

#: ../../source/docs/3/basic_network_analysis.rst:16
msgid "Get the data"
msgstr "Beschaffung der Daten"

#: ../../source/docs/3/basic_network_analysis.rst:17
msgid ""
"District of Columbia government freely shares hundreds of datasets on the "
"`Open Data Catalog <https://opendata.dc.gov/>`_."
msgstr ""
"Die Regierung des Distrikts Columbia stellt hunderte Datensätze frei zur "
"Verfügung: `Open Data Catalog <https://opendata.dc.gov/>`_."

#: ../../source/docs/3/basic_network_analysis.rst:19
msgid ""
"Download the `Street Centerlines <https://opendata.dc.gov/datasets/street-"
"centerlines>`_ shared by DCGISopendata data as a shapefile."
msgstr ""
"Wir laden folgende Daten der DCGISopendata als shape-Datei herunter: `Street"
" Centerlines <https://opendata.dc.gov/datasets/street-centerlines>`_."

#: ../../source/docs/3/basic_network_analysis.rst:24
msgid ""
"For convenience, you may directly download a copy of the datasets from the "
"links below:"
msgstr ""
"Der Einfachheit halber können wir eine Kopie der Datensätze unter folgenden "
"links herunterladen:"

#: ../../source/docs/3/basic_network_analysis.rst:27
msgid ""
"`Street_Centerlines.zip "
"<http://www.qgistutorials.com/downloads/Street_Centerlines.zip>`_"
msgstr ""
"`Street_Centerlines.zip "
"<http://www.qgistutorials.com/downloads/Street_Centerlines.zip>`_"

#: ../../source/docs/3/basic_network_analysis.rst:29
msgid "Data Source: [DCOPENDATA]_"
msgstr "Datenquelle: [DCOPENDATA]_"

#: ../../source/docs/3/basic_network_analysis.rst:33
msgid "Procedure"
msgstr "Arbeitsablauf"

#: ../../source/docs/3/basic_network_analysis.rst:35
msgid ""
"Locate the downloaded ``Street_Centerlines.zip`` file in the "
":guilabel:`Browser` panel. Expand it and drag the ``Street_Centerlines.shp``"
" file to the canvas."
msgstr ""
"Suche die heruntergeladene Datei ``Street_Centerlines.zip`` im "
":guilabel:`Browser` Bereich. Erweitere die Datei und ziehe die Datei "
"``Street_Centerlines.shp`` in den Arbeitsbereich."

#: ../../source/docs/3/basic_network_analysis.rst:40
msgid ""
"You will see a new line layer called ``Street_Centerlines`` added to the "
":guilabel:`Layers` panel. This layer represents each road in Washington DC. "
"Select the :guilabel:`Identify` tool in the :guilabel:`Attributes Toolbar`. "
"Click on any road segment to see what attributes are attached to it. There "
"are standard attributes like road name, type etc. there is an attribute "
"called ``DIRECTIONA``. This is an import attribute for routing as it "
"specifies whether the segment is two-way or one-way. It contains 4 different"
" values. ``Two Way`` for two-way streets. ``One Way (Digitizing direction)``"
" for one-way streets where the traffic is allowed in the direction of the "
"line (start-point to end-point) and ``One way (Against digitizing "
"direction)`` for one-way streets where the traffic flows in the opposite "
"direction of the line. There is also ``Unknown`` value where we will assume "
"two-way traffic. We will now use the information in that attribute to "
"display an arrow on streets that are one-way."
msgstr ""
"Wir sehen einen neuen Layer ``Street_Centerlines`` im :guilabel:`Layer` "
"Bereich. Dieser Layer stellt alle Straßen in Washington DC dar. Wähle das "
"Tool :guilabel:`Objekte abfragen` in der :guilabel:`Attributwerkzeugleiste`."
" Klicke auf einen beliebigen Straßenabschnitt, um die enthaltenen Attribute "
"zu ermitteln. Man sieht Standardattribute wie den Straßennamen oder "
"Straßentyp aber es gibt auch ein Attribut ``DIRECTIONA``. Dieses Attribut "
"ist für das Routing wichtig, es bestimmt in welcher Richtung der Verkehr "
"erfolgt. Das Attribut enthält 4 verschiedene Werte. ``Two Way`` steht für "
"Straßenabschnitte mit Gegenverkehr. ``One Way (Digitizing direction)`` steht"
" für Einbahnstraßen, auf denen der Verkehr nur in der Richtung der Linie "
"erfolgen darf (vom Startpunkt zum Endpunkt) und ``One way (Against "
"digitizing direction)`` für Einbahnstraßen, auf denen der Verkehr nur "
"entgegengesetzt der Linienrichtung erfolgen darf. Für den Wert ``Unknown``, "
"also unbekannt nehmen wir eine Straße mit Gegenverkehr an. Wir verwenden die"
" hinterlegt Information jetzt, um einen Pfeil für Einbahnstraßen zu "
"erzeugen."

#: ../../source/docs/3/basic_network_analysis.rst:45
msgid ""
"Click the :guilabel:`Open the layer Styling Panel` button in the "
":guilabel:`Layers` panel. Select the ``Rule-based`` renderer from the drop-"
"down menu."
msgstr ""
"Klicke auf den Knopf :guilabel:`Layergestaltungsfenster öffnen` im Bereich "
":guilabel:`Layer`. Wähle ``Regelbasierend`` als Darstellung aus dem drop-"
"down Menü aus."

#: ../../source/docs/3/basic_network_analysis.rst:50
msgid ""
"We will create a new style with a filter for only the one-way roads. Click "
"the :guilabel:`Add rule +` button."
msgstr ""
"Wir werden einen neuen Layerstil mit Hilfe eines Filters für Einbahnstraßen "
"erstellen. Klicke auf den Knopf :guilabel:`Regel hinzufügen`."

#: ../../source/docs/3/basic_network_analysis.rst:55
msgid ""
"In the :guilabel:`Edit rule` dialog, click the :guilabel:`Expression` "
"button."
msgstr ""
"Im Dialog :guilabel:`Regel bearbeiten` klicken wir auf den Knopf "
":guilabel:`Ausdruck`."

#: ../../source/docs/3/basic_network_analysis.rst:60
msgid ""
"In the :guilabel:`Expression string builder` dialog, expand the "
":guilabel:`Fields and Values` section in the middle-panel. Select "
"``DIRECTIONA`` attribute and click :guilabel:`All Unique` in the right-hand "
"panel. The 4 values that we discussed earlier will appear. Having these "
"values here as a reference helps when building the expression. Also, you can"
" double-click on any value to add them to the expression."
msgstr ""
"Im :guilabel:`Ausdruckseditor` erweitern wir :guilabel:`Felder und Werte` in"
" der mittleren Spalte. Wir wählen das Attribut ``DIRECTIONA`` und klicken in"
" der rechten Spalte auf :guilabel:`Alle eindeutigen`. Es werden die 4 oben "
"beschriebenen Werte angezeigt. Wir können später auf jeden der Werte doppelt"
" klicken, um ihn in den Ausdruck einzufügen."

#: ../../source/docs/3/basic_network_analysis.rst:65
msgid ""
"The goal is to create an expression that selects all one-way streets. Enter "
"the following expression and click :guilabel:`OK`."
msgstr ""
"Unser Ziel ist es, einen Ausdruck zu erzeugen, der alle Einbahnstraßen "
"selektiert. Wir geben den folgenden Ausdruck ein und klicken auf "
":guilabel:`OK`."

#: ../../source/docs/3/basic_network_analysis.rst:74
msgid "Next, change the :guilabel:`Symbol layer type` to ``Marker line``."
msgstr ""

#: ../../source/docs/3/basic_network_analysis.rst:79
msgid "Select ``on center point`` under :guilabel:`Marker placement`."
msgstr ""

#: ../../source/docs/3/basic_network_analysis.rst:84
msgid ""
"Click on the ``Simple marker`` symbol. Scroll down and pick the "
"``filled_arrowhead`` marker. You will see that the arrow-like symbol now "
"appears on the one-way streets. But all of them are pointing in a single "
"direction, whereas we know that our filter contains roads in multiple "
"directions. We can further refine the symbols with a data-defined override "
"for the :guilabel:`Rotation` value."
msgstr ""

#: ../../source/docs/3/basic_network_analysis.rst:89
msgid ""
"Click the :guilabel:`Data defined override` button next to "
":guilabel:`Rotation`."
msgstr ""

#: ../../source/docs/3/basic_network_analysis.rst:94
msgid ""
"We can put a conditional expression that returns different rotation value "
"depending on the one-way direction. A simple 0 or 180 degree rotation works "
"to account for the direction, but it works only for horizontal lines. To "
"align the arrow-head perpendicular to all the lines - we need to account for"
" the angle of the line in the expression as well. The ``angle_at_vertex`` "
"function helps us find the angle and use it in the expression. Enter the "
"following expression and click :guilabel:`OK`."
msgstr ""

#: ../../source/docs/3/basic_network_analysis.rst:108
msgid ""
"Now you will see the arrow-heads aligned to the correct road direction and "
"angle. To keep the style uncluttered, we are choosing to display arrows only"
" on one-way streets. Unlabeled streets are assumed to be two-way. Now that "
"we have the network styled correctly, we can do some analysis. Go to "
":menuselection:`Processing --> Toolbox`."
msgstr ""

#: ../../source/docs/3/basic_network_analysis.rst:113
msgid ""
"Search for and locate the :menuselection:`Network analysis --> Shortest path"
" (point to point)` algorithm. Double-click to launch it."
msgstr ""

#: ../../source/docs/3/basic_network_analysis.rst:118
msgid ""
"In the :guilabel:`Shortest Path (Point to Point)` dialog, select "
"``Street_Centerlines`` as the :guilabel:`Vector layer representing network`."
"  Keep the :guilabel:`Path type to calculate` as ``Shortest``. Next we need "
"to pick a start and end point. You can click the :guilabel:`...` button and "
"click on any point on the network in the canvas. If you want to replicate "
"the results in this tutorial, you can enter "
"``-76.99730092166396,38.887624846748984`` as the :guilabel:`Start point` and"
" ``-76.99154831062152,38.89151000569929`` as the :guilabel:`End point`. "
"Expand the :guilabel:`Advanced parameter` section. Choose ``DIRECTIONA`` as "
"the :guilabel:`Direction field`. You must be familiar with the one-way "
"direction values for forward and backward traffic flow. Enter ``One Way "
"(Digitizing direction)`` as the :guilabel:`Value for forward direction` and "
"``One way (Against digitizing direction)`` as the :guilabel:`Value for "
"backward direction`. Keep other options to their default values and click "
":guilabel:`Run`."
msgstr ""

#: ../../source/docs/3/basic_network_analysis.rst:123
msgid ""
"The algorithm will use the geometry of the layer and provided parameters to "
"build a network graph. This graph is then used to find the shortest path "
"between the start and end points. Once the algorithm finishes, you will see "
"a new layer ``Shortest path`` added to the :guilabel:`Layers` panel that "
"shows the shortest path between start and end points."
msgstr ""

#: ../../source/docs/3/basic_network_analysis.rst:128
msgid ""
"You will see that there are many possible paths between start and end "
"points. But given the constraints of the network - such as one-ways, the "
"result is the shortest possible path. It is always a good idea to validate "
"your analysis and assumptions. One easy way to validate it is to use a "
"third-party mapping service to see if their results match with the ones we "
"derived. Here is the shortest path `suggested by Google Maps "
"<https://goo.gl/maps/XwTXTkvuaCuteocr8>`_ between the same start and end "
"points. As you can see the recommended shortest route matches exactly with "
"our results - validating our analysis."
msgstr ""
